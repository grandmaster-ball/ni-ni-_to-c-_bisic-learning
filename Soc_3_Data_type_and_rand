三、数据类型及其性质变化

    c++ 没有指数运算符
    double pow(double , double);
    所以请避免在长运算中 pow 或 %

    数据类型转换
    static_cast<DataType>(value)
    (double)books;      C风格
    double(books)       功能性表示法

    overflow  underflow(小数位)

    const INTEREST_RATE 全大写表示常量


    Formatting（格式化）
    {
        setw()只和最近的一个流对象建立宽度
        持续有效
            setprecision() fixed left right
        
        Siginificant Digit 有效数
        Precision          精度
        setprecision() 本身是保留有效数字的，大于设定位数就科学计数法了
        默认显示一般是六位有效数字 (showpoint为例)
        
        showpoint<<x<<endl;
        打印浮点数的小数点和小数位数
    }
    
    cin>> 会传递并忽略前导 白色空格(Whitespace)
    
    解决办法是使用getline(cin , inputLine);
    
    cin>>会在遇到换行时停止，而不是吃掉'\n'
    所以如果在后面加上个getchar()或cin.get()
    他就会直接吃掉那个'\n'
    提出  cin.ignore( int , char );

    字符串格式函数
        .length()
        .assign( int , char ) //用 int 个 char 填上这个字符串；
        
    C字符串：
    {
        char word[10] = "hello";
      赋值：strcpy( Cstring , value );  value(string)
      
    C字符串如果cin超过长度了，会导致缓冲区溢出 : Buffer Overrun
      char word[5];
      cin>>setw(5)>>word;
    或cin.width(5); cin>>word;       //cin.width() 与 setw一样 ，只和最近的一个对象建立关系
                                     //为 '\0' 字符留空间，所以width(5)只读入四个
                                     //空格会让他停止输入
   
    c字符串读入应该cin.getline( word , int ）;
        应注意 int 应比数组大小小一个 ；
    }
        
    int abs( num ); 绝对值
    
    随机数
    #include <cstdlib>
        
    int main()
    {
        unsigned seed;
        
        seed = time(0);
        srand(seed);
        
        int dice = rand() % 6 + 1;
        cout<<dice;
    }
    道理是，取余加上差量，可以控制随机量的范围。
    
    








